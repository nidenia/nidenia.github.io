// адаптивные свойства
@mixin adaptive($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type == 1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 360px) / #{$maxWidthContainer - 360}));
    }
  } @else if $type == 2 {
    // Только если больше контейнера
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 360px) / #{$maxWidth - 360}));
    }
  } @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 360px) / #{$maxWidth - 360}));
  }
}


// кнопки
@mixin button($borderColor, $textColor) {
  position: relative;
  color: $textColor;
  text-align: center;
  padding: 10px;
  font-size: 16px;
  font-weight: 500;
  line-height: 1.9;
  cursor: pointer;

  &::before,
  &::after {
    content: "";
    position: absolute;
    opacity: 0.3;
    transition: opacity 0.3s linear;
  }

  &::before {
    top: -7px;
    bottom: -7px;
    left: 0;
    right: 0;
    border-right: 1px dashed $borderColor;
    border-left: 1px dashed $borderColor;
  }

  &::after {
    top: 0;
    bottom: 0;
    left: -7px;
    right: -7px;
    border-top: 1px dashed $borderColor;
    border-bottom: 1px dashed $borderColor;
  }

  &:hover::before,
  &:hover::after {
    opacity: 1;
  }
}